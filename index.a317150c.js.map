{"mappings":"AAAA,MAOMA,EAAU,CACdC,QAAS,CACP,YAJF,0ECHF,MAAMC,EAAgBC,SAASC,cAAc,iBACvCC,EAAmBF,SAASC,cAAc,aAC1CE,EAAUH,SAASC,cAAc,WACjCG,EAAQJ,SAASC,cAAc,UAE/BI,EAAQ,CAAEC,OAAQ,OAExBC,iBACE,IACEJ,EAAQK,MAAMC,QAAU,QACxBL,EAAMI,MAAMC,QAAU,OACtB,MAAMC,SDCDC,MAZS,sCAYQd,GAASe,MAAKF,IACpC,IAAKA,EAASG,GACZ,MAAM,IAAIC,MAAMJ,EAASK,QAE3B,OAAOL,EAASM,MAAM,KCLiBC,QACrCC,I,IAAOC,EAAA,OAAkB,OAAT,QAATA,EAAAD,EAAIE,aAAK,IAATD,OAAA,EAAAA,EAAWE,IAAW,IAE/BlB,EAAQK,MAAMC,QAAU,OACxBJ,EAAMC,OAASI,EACfA,EAASY,SAAQ,CAACC,EAAOC,KACvB,IAAIC,EAASzB,SAAS0B,cAAc,UACpCD,EAAOE,MAAQH,EACfC,EAAOG,UAAY,GAAGL,EAAMM,OAC5B9B,EAAc+B,YAAYL,EAAO,G,CAEnC,MAAOM,GACPA,EAAMvB,MAAMC,QAAU,QAEtBuB,QAAQC,MAAMF,E,EAIlBG,GAmCAnC,EAAcoC,iBAAiB,UAjC/B5B,eAA6B6B,GAC3B,IACE,MAAMT,MAAEA,GAAUS,EAAIC,OACtBlC,EAAQK,MAAMC,QAAU,QACxBL,EAAMI,MAAMC,QAAU,OACtB,MAAMC,QDhBsB4B,ECgBWjC,EAAMC,OAAOqB,GAAOW,GDftD3B,MAAM,yDAAuC2B,IAAMzC,GAASe,MACjEF,IACE,IAAKA,EAASG,GACZ,MAAM,IAAIC,MAAMJ,EAASK,QAE3B,OAAOL,EAASM,MAAM,KCWxBb,EAAQK,MAAMC,QAAU,OACxB,MAAM8B,EAAUvC,SAAS0B,cAAc,OACvCa,EAAQ/B,MAAQ,0BAChB,MAAMY,EAAQpB,SAAS0B,cAAc,OACrCN,EAAMZ,MAAQ,eACdY,EAAMoB,IAAM9B,EAAS,GAAGW,IACxBkB,EAAQT,YAAYV,GACpB,MAAMqB,EAAczC,SAAS0B,cAAc,OAC3Ce,EAAYjC,MAAQ,UACpB,MAAMkC,EAAQ1C,SAAS0B,cAAc,MACrCgB,EAAMd,UAAYvB,EAAMC,OAAOqB,GAAOE,KACtCY,EAAYX,YAAYY,GACxB,MAAMC,EAAc3C,SAAS0B,cAAc,KAC3CiB,EAAYf,UAAYvB,EAAMC,OAAOqB,GAAOgB,YAC5CF,EAAYX,YAAYa,GACxB,MAAMC,EAAc5C,SAAS0B,cAAc,KAC3CkB,EAAYhB,UAAY,uCAAuCvB,EAAMC,OAAOqB,GAAOiB,qBACnFH,EAAYX,YAAYc,GACxBL,EAAQT,YAAYW,GACpBvC,EAAiB0B,UAAY,KAC7B1B,EAAiB4B,YAAYS,E,CAC7B,MAAOM,GACPA,EAAMrC,MAAMC,QAAU,QACtBuB,QAAQC,MAAMY,E,CDxCX,IAAyBP,C","sources":["src/cat-api.js","src/index.js"],"sourcesContent":["const baseUrl = `https://api.thecatapi.com/v1`;\n\nconst breedsUrl = `${baseUrl}/breeds`;\n\nconst api_key =\n  'live_NxGLi8FWn8k1hltrjCukr33VwfMjLE2OPv6AHvAYi5KyY2XSsAKqSoCh8T7CqgSv';\n\nconst options = {\n  headers: {\n    'x-api-key': api_key,\n  },\n};\n\nexport function fetchBreeds() {\n  return fetch(breedsUrl, options).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nexport function fetchCatByBreed(id) {\n  return fetch(`${baseUrl}/images/search?breeds_ids=${id}`, options).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n}\n","import { fetchBreeds, fetchCatByBreed } from './cat-api';\n\nconst breedSelector = document.querySelector(`.breed-select`);\nconst catInfoContainer = document.querySelector('.cat-info');\nconst loading = document.querySelector(`.loader`);\nconst error = document.querySelector(`.error`);\n\nconst store = { breeds: null };\n\nasync function getAndUpdBreeds() {\n  try {\n    loading.style.display = `block`;\n    error.style.display = `none`;\n    const response = (await fetchBreeds()).filter(\n      img => img.image?.url != null\n    );\n    loading.style.display = `none`;\n    store.breeds = response;\n    response.forEach((breed, index) => {\n      let option = document.createElement('option');\n      option.value = index;\n      option.innerHTML = `${breed.name}`;\n      breedSelector.appendChild(option);\n    });\n  } catch (error) {\n    error.style.display = `block`;\n\n    console.error(error);\n  }\n}\n\ngetAndUpdBreeds();\n\nasync function selectHandler(evt) {\n  try {\n    const { value } = evt.target;\n    loading.style.display = `block`;\n    error.style.display = `none`;\n    const response = await fetchCatByBreed(store.breeds[value].id);\n    loading.style.display = `none`;\n    const wrapper = document.createElement(`div`);\n    wrapper.style = `display:flex; gap:16px;`;\n    const image = document.createElement(`img`);\n    image.style = 'width:340px;';\n    image.src = response[0].url;\n    wrapper.appendChild(image);\n    const textContent = document.createElement(`div`);\n    textContent.style = `flex:1;`;\n    const title = document.createElement(`h1`);\n    title.innerHTML = store.breeds[value].name;\n    textContent.appendChild(title);\n    const description = document.createElement(`p`);\n    description.innerHTML = store.breeds[value].description;\n    textContent.appendChild(description);\n    const temperament = document.createElement(`p`);\n    temperament.innerHTML = `<strong>Temperament: </strong><span>${store.breeds[value].temperament}</span>`;\n    textContent.appendChild(temperament);\n    wrapper.appendChild(textContent);\n    catInfoContainer.innerHTML = null;\n    catInfoContainer.appendChild(wrapper);\n  } catch (error) {\n    error.style.display = `block`;\n    console.error(error);\n  }\n}\n\nbreedSelector.addEventListener('change', selectHandler);\n\n// test build\n//dd\n"],"names":["$6b5f202d1456c0af$var$options","headers","$1f0dc3b9307be026$var$breedSelector","document","querySelector","$1f0dc3b9307be026$var$catInfoContainer","$1f0dc3b9307be026$var$loading","$1f0dc3b9307be026$var$error","$1f0dc3b9307be026$var$store","breeds","async","style","display","response","fetch","then","ok","Error","status","json","filter","img","ref","image","url","forEach","breed","index","option","createElement","value","innerHTML","name","appendChild","error1","console","error","$1f0dc3b9307be026$var$getAndUpdBreeds","addEventListener","evt","target","id","wrapper","src","textContent","title","description","temperament","error2"],"version":3,"file":"index.a317150c.js.map"}